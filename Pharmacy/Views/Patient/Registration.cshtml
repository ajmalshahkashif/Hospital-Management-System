@model Pharmacy.Models.Registration

@{
    ViewBag.Title = "Registration";
    Layout = "~/Views/Shared/_LayoutLeftMenu.cshtml";
}

<h2>Registration</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <ol class="breadcrumb">
        <li>@Html.ActionLink("All Items", "AllItems", "Item")</li>
        <li class="active">Add Item</li>
    </ol>

    <div class="form-horizontal">

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-lg-2 required" })
            <div class="col-lg-3">
                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
            </div>

            @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-lg-2 required" })
            <div class="col-lg-3">
                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
            </div>

            <div class="col-lg-6">
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-lg-2 required" })
            <div class="col-lg-3">
                @Html.DropDownListFor(model => model.Email, new SelectList(Enumerable.Empty<SelectListItem>()), "Please Select",
               new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>

            @Html.LabelFor(model => model.PhoneNo, htmlAttributes: new { @class = "control-label col-lg-2" })
            <div class="col-lg-3">
                @Html.EditorFor(model => model.PhoneNo, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PhoneNo, "", new { @class = "text-danger" })
            </div>
            <div class="col-lg-6">
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MobileNo, htmlAttributes: new { @class = "control-label col-lg-2" })
            <div class="col-lg-3">
                @Html.TextBoxFor(model => model.MobileNo, new { @class = "form-control", onblur = "return calculatePurchasePrice()", @Value = "15" })
                @Html.ValidationMessageFor(model => model.MobileNo, "", new { @class = "text-danger" })
            </div>
            @Html.LabelFor(model => model.City, htmlAttributes: new { @class = "control-label col-lg-2" })
            <div class="col-lg-3">
                @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control", @Value = "10" } })
                @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
            </div>
            <div class="col-lg-6">
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.State, htmlAttributes: new { @class = "control-label col-lg-2 required" })
            <div class="col-lg-3">
                @Html.EditorFor(model => model.State, new { htmlAttributes = new { @class = "form-control", onblur = "return calculatePurchasePrice()" } })
                @Html.ValidationMessageFor(model => model.State, "", new { @class = "text-danger" })
            </div>

            @Html.LabelFor(model => model.Country, htmlAttributes: new { @class = "control-label col-lg-2 required" })
            <div class="col-lg-3">
                @Html.EditorFor(model => model.Country, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Country, "", new { @class = "text-danger" })
            </div>
            <div class="col-lg-6">
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DOB, htmlAttributes: new { @class = "control-label col-lg-2" })
            <div class="col-lg-3">
                @Html.EditorFor(model => model.DOB, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DOB, "", new { @class = "text-danger" })
            </div>
            @Html.LabelFor(model => model.DOB, htmlAttributes: new { @class = "control-label col-lg-2" })
            <div class="col-lg-3">
                @Html.EditorFor(model => model.DOB, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DOB, "", new { @class = "text-danger" })
            </div>
            <div class="col-lg-6">
            </div>
        </div>

     

        <div class="form-group">
            <div class="col-lg-offset-2 col-lg-10">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </div>

    </div>
}

<div>
    @Html.ActionLink("Back to List", "AllItems")
</div>
